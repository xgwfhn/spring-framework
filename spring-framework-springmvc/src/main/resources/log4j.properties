#定义输出级别和输出平台
log4j.rootLogger=INFO,CONSOLE
log4j.addivity.org.apache=true
# 应用于控制台
#定义一个名为CONSOLE的输出目的地,ConsoleAppender为控制台
#Ø         格式化日志信息 
#Log4J 采用类似 C 语言中的 printf 函数的打印格式格式化日志信息，打印参数如下： 
#%m 输出代码中指定的消息 
#%p 输出优先级，即 DEBUG ， INFO ， WARN ， ERROR ， FATAL 
#%r 输出自应用启动到输出该 log 信息耗费的毫秒数 
#%c 输出所属的类目，通常就是所在类的全名 
#%t 输出产生该日志事件的线程名 
#%n 输出一个回车换行符， Windows 平台为 “rn” ， Unix 平台为 “n”   但是目前测试 %n也能换行
#%d 输出日志时间点的日期或时间，默认格式为 ISO8601 ，也可以在其后指定格式，比如： %d{yyyy MMM dd HH:mm:ss,SSS} ，输出类似： 2002 年 10 月 18 日 22 ： 10 ： 28 ， 921 
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。

#设定CONSOLE输出平台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Threshold=INFO
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Encoding=UTF-8
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[logger:] %d - %c-%m %n